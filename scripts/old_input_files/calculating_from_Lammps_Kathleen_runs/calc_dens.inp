root_folder = "/home/matt/Data/Pentacene_Final_Data/"

folder_crys = "$root_folder/Crystal_Run"
folder_inst = "$root_folder/Instant_Quench"
folder_50ps = "$root_folder/50ps_Quench"
folder_1ns = "$root_folder/1ns_Quench"
folder_10ns = "$root_folder/10ns_Quench"
folder_100ns = "$root_folder/100ns_Quench"


## Crystal
load "$folder_crys/log.lammps" lammps_log as crystal_data
set system crystal_data to pentacene
calc density from crystal_data as dens_crystal


## Instant Quench
load "$folder_inst/log.lammps" lammps_log as inst_data
set system inst_data to pentacene
calc density from inst_data as dens_inst


## 50ps
load "$folder_50ps/log.lammps" lammps_log as data_50ps
set system data_50ps to pentacene
calc density from data_50ps as dens_50ps

## 1ns
load "$folder_1ns/log.lammps" lammps_log as data_1ns
set system data_1ns to pentacene
calc density from data_1ns as dens_1ns

## 10ns
load "$folder_10ns/log.lammps" lammps_log as data_10ns
set system data_10ns to pentacene
calc density from data_10ns as dens_10ns

## 100ns
load "$folder_100ns/Pent_350K_100ns.o45022" lammps_log as data_100ns
set system data_100ns to pentacene
calc density from data_100ns as dens_100ns


## Plotting
python {
    import matplotlib.pyplot as plt

    # Append all the CSVs into fewer of them
    dens_crystal.data.append_csvs()
    dens_50ps.data.append_csvs()
    dens_1ns.data.append_csvs()
    dens_10ns.data.append_csvs()
    dens_100ns.data.append_csvs()

    # Get the densities
    crystal_density = float(dens_crystal.data.collected_csv_data[0]['Density'][250:2500].mean())
    liquid_density = float(dens_crystal.data.collected_csv_data[0]['Density'][5500:6000].mean())
    density_50ps = float(dens_50ps.data.collected_csv_data[0]['Density'][-1:])
    density_1ns = float(dens_1ns.data.collected_csv_data[0]['Density'][-1:])
    density_10ns = float(dens_10ns.data.collected_csv_data[0]['Density'][-1:])
    density_100ns = float(dens_100ns.data.collected_csv_data[0]['Density'][-1:])

    all_data = [crystal_density, density_50ps, density_1ns, density_10ns,       
                density_100ns]
    data_labels = ["Crystal", "50ps Quench", "1ns Quench", "10ns Quench",
                   "100ns Quench"]

    plt.bar(range(len(all_data)), all_data, width=0.99)

    plt.ylim([1.0, 1.36])

    max_yval = max(all_data)
    for i, val in enumerate(all_data):
        plt.annotate(r"%.2f [g cm$^{-3}$]" % val, (i, val + 0.01*(max_yval)), fontsize=20, ha="center")

    # plt.axhline(0.87*crystal_density, color='r', ls='--')
    # plt.annotate("Amorphous Density", (-0.625, 0.87*crystal_density), fontsize=20, va="bottom")

    plt.xticks(range(len(all_data)), data_labels)
    plt.ylabel(r"Density [g cm$^{-3}$]")
    plt.legend()

    plt.tight_layout()
    plt.show()
}
